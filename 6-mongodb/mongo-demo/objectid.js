// _id: [24 characters]
// equals 12 bytes
    // first 4 bytes=timestamp -> so sorting by id is same as sorting by createdAt
    // next 3 bytes=machine identifier
    // next 2 bytes=process identifier
    // last 3 bytes=counter

// 1 byte = 8 bits
// 1 byte = 2^8 = 256 different numbers
// 3 byte = 2^24 = 16M -> therefore if same machine/process and time generates 16M documents, counter will overflow
// and have two documents with same _id

// id is generated by driver
// mongoose is abstraction over MongoDb_Driver
// Driver -> MongoDb

const mongoose = require('mongoose')

const id = new mongoose.Types.ObjectId()

console.log(id.getTimestamp())

const isValid = mongoose.Types.ObjectId.isValid('1234')

console.log(isValid)